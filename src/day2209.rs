use std::collections::HashSet;

pub fn run(part: i8) {
    if part == 1 {
        part1();
    } else {
        part2();
    }
}

fn part1() {
    let mut h = Point{x: 0, y: 0};
    let mut t = Point{x: 0, y: 0};
    let mut tpos = HashSet::<Point>::new();
    tpos.insert(t.clone());

    for movement in &movements() {
        for _ in 0..movement.count {
            match movement.dir {
                Dir::Up => h.y -= 1,
                Dir::Down => h.y += 1,
                Dir::Left => h.x -= 1,
                Dir::Right => h.x += 1,
            };

            follow(&h, &mut t);
            tpos.insert(t.clone());
        }
    }

    println!("{}", tpos.len());
}

fn follow(h: &Point, t: &mut Point) {
    if h.x > t.x+1 {
        t.x = h.x - 1;
        t.y = h.y;
    } else if h.x < t.x-1 {
        t.x = h.x + 1;
        t.y = h.y;
    } else if h.y > t.y+1 {
        t.x = h.x;
        t.y = h.y - 1;
    } else if h.y < t.y - 1 {
        t.x = h.x;
        t.y = h.y + 1;
    }
}

fn part2() {
    let mut points = Vec::<Point>::with_capacity(10);
    for _ in 0..10 {
        points.push(Point{x: 0, y: 0});
    }

    const HEAD: usize = 0;
    const TAIL: usize = 9;

    let mut tpos = HashSet::<Point>::new();
    tpos.insert(points[TAIL].clone());

    for movement in &movements() {
        for _ in 0..movement.count {
            match movement.dir {
                Dir::Up => points[HEAD].y -= 1,
                Dir::Down => points[HEAD].y += 1,
                Dir::Left => points[HEAD].x -= 1,
                Dir::Right => points[HEAD].x += 1,
            };

            for pos in HEAD..TAIL {
                let leader = &points[pos];
                let mut follower = points[pos+1].clone();
                follow(leader, &mut follower);

                points[pos+1].x = follower.x;
                points[pos+1].y = follower.y;
            }

            tpos.insert(points[TAIL].clone());
        }
    }

    println!("{}", tpos.len());
}

#[derive(Debug, PartialEq, Eq, Copy, Clone, Hash)]
struct Point {
    x: i32,
    y: i32,
}

#[derive(Debug)]
enum Dir {
    Left,
    Right,
    Up,
    Down,
}

#[derive(Debug)]
struct Move {
    dir: Dir,
    count: i32,
}

fn movements() -> Vec<Move> {
    let mut v = Vec::new();

    for l in input().lines() {
        let mut parts = l.trim().split_whitespace();
        let dir = parts.next().unwrap();
        let val = parts.next().unwrap().parse::<i32>().unwrap();
        match dir {
            "D" => v.push(Move{dir: Dir::Down, count: val}),
            "U" => v.push(Move{dir: Dir::Up, count: val}),
            "L" => v.push(Move{dir: Dir::Left, count: val}),
            "R" => v.push(Move{dir: Dir::Right, count: val}),
            _ => (),
        }
    }

    v
}

fn input2() -> &'static str {
    r###"
R 5
U 8
L 8
D 3
R 17
D 10
L 25
U 20
    "###.trim()
}

fn input() -> &'static str {
    r###"
D 2
U 1
D 1
U 2
D 2
U 2
R 2
D 1
L 1
U 2
D 1
R 1
U 1
D 1
U 1
D 2
L 1
D 1
U 1
R 1
D 1
R 1
L 2
D 1
R 2
U 2
L 1
U 1
R 1
D 1
U 2
D 1
U 1
R 1
L 1
U 1
R 1
D 2
U 2
R 2
L 1
R 2
L 2
D 1
L 2
R 2
D 2
R 2
D 1
R 2
D 1
R 1
U 2
L 2
D 1
R 2
U 2
L 1
U 1
R 2
D 2
L 1
U 2
R 2
U 1
R 1
D 2
L 1
R 2
U 1
D 2
U 1
R 1
L 2
D 1
U 1
L 1
R 2
L 2
R 1
D 2
L 1
R 2
L 2
R 2
U 2
L 2
R 2
L 2
R 1
L 2
D 1
L 2
D 1
R 2
D 2
U 2
L 2
R 2
U 2
D 1
R 2
L 1
D 2
U 1
L 1
D 2
L 1
U 2
L 2
U 1
L 2
U 2
D 1
R 2
U 3
R 3
L 1
R 2
D 1
R 1
U 2
L 2
U 3
L 1
U 1
R 3
D 1
U 1
R 3
U 2
L 2
D 1
L 2
D 2
U 2
D 2
L 3
U 3
R 3
D 1
L 2
D 3
R 2
L 1
U 3
D 2
U 3
L 1
R 3
U 1
L 2
R 1
D 1
U 2
D 2
R 2
L 1
U 3
L 2
U 1
L 3
U 1
D 3
R 3
L 2
D 3
R 1
L 1
U 2
D 3
L 1
U 3
R 1
D 1
R 2
U 1
L 2
U 1
L 2
D 1
R 2
L 3
R 1
L 3
R 1
D 1
R 3
U 1
L 3
R 2
L 1
U 3
R 1
U 3
D 1
R 1
D 1
R 1
L 1
U 3
R 1
L 1
U 2
D 2
R 3
L 1
U 3
D 1
L 2
U 3
R 2
L 1
R 1
L 3
D 1
U 3
L 2
U 2
R 1
U 3
L 2
U 3
R 4
D 1
L 1
U 1
D 3
R 1
D 2
R 2
U 2
R 2
L 3
D 3
U 2
L 2
D 2
R 1
D 1
U 4
R 2
L 2
R 4
D 2
U 4
L 4
R 4
L 1
D 4
R 3
U 2
D 3
R 2
L 2
R 3
U 2
D 4
L 2
D 3
R 4
D 2
L 4
D 2
L 1
R 1
L 3
U 3
D 2
L 2
R 4
D 1
U 3
D 1
U 3
R 4
L 1
U 3
L 1
R 1
D 1
R 2
D 1
R 3
D 1
U 4
L 2
U 1
D 3
L 3
D 2
L 2
D 3
R 1
D 3
U 2
D 3
U 4
D 2
L 1
R 4
D 1
L 1
D 2
L 1
U 3
L 1
D 4
L 3
D 3
U 4
L 2
R 3
D 3
R 2
D 2
R 2
D 1
L 1
U 4
D 1
U 1
L 1
U 3
R 1
D 3
L 3
R 1
L 3
D 4
R 3
U 2
L 2
R 1
D 5
R 3
L 1
D 1
R 1
L 5
D 4
L 1
R 1
L 4
D 3
L 3
R 2
U 5
L 3
D 2
U 4
D 1
U 4
L 3
U 5
R 2
U 3
L 4
R 1
U 3
L 3
D 3
R 4
U 5
L 2
R 4
L 5
R 2
D 1
L 5
D 5
R 5
D 3
R 5
D 3
L 1
U 3
L 2
D 3
L 4
D 5
L 5
D 5
R 4
L 1
U 5
L 3
U 4
L 4
D 1
L 4
D 3
R 4
U 3
R 3
L 4
U 2
D 3
U 4
D 3
R 1
U 2
D 3
R 5
L 2
R 5
U 3
L 4
R 1
L 3
U 1
D 1
L 3
R 5
U 5
R 1
U 4
L 4
U 3
R 5
L 3
D 4
L 1
U 3
L 3
U 2
D 2
R 5
L 5
U 2
L 2
R 3
U 4
R 5
L 5
D 1
R 3
U 4
L 5
U 1
R 4
U 1
D 5
R 3
D 1
L 4
U 5
D 5
R 1
L 6
D 6
R 2
U 4
L 3
R 5
L 5
R 4
U 5
D 3
L 5
U 2
L 3
D 3
U 3
D 6
U 2
R 5
D 1
U 2
D 2
U 2
R 6
D 4
U 4
R 4
U 6
R 3
U 4
D 4
L 3
U 3
L 5
U 3
R 1
U 5
L 6
U 1
D 3
U 5
D 4
L 5
R 5
U 3
L 6
R 2
L 3
D 4
L 2
U 3
D 5
U 4
D 3
R 2
U 6
D 5
R 2
U 6
L 6
R 2
U 3
L 6
R 5
D 4
U 3
R 5
L 6
R 4
D 6
L 3
R 6
U 6
R 4
U 4
R 6
U 2
D 3
R 1
U 3
D 3
R 5
D 3
R 5
U 4
R 4
L 4
U 2
R 1
U 1
L 2
D 1
R 6
U 2
D 2
L 6
R 1
U 3
L 3
U 5
D 4
L 2
D 1
U 1
D 5
U 5
L 5
D 2
L 5
U 5
D 2
R 7
U 7
D 4
R 4
D 6
U 2
R 5
L 2
U 2
R 2
D 6
U 7
R 7
D 7
U 7
D 2
R 4
D 7
U 6
D 1
R 5
D 7
R 3
L 2
D 2
U 2
L 7
U 2
D 3
U 2
D 5
L 4
U 7
R 7
U 2
L 6
U 7
R 5
U 3
D 1
L 2
U 1
D 5
U 7
D 4
L 6
R 5
L 2
U 2
R 6
L 1
U 7
R 7
U 3
D 3
L 2
R 2
U 6
R 4
D 4
R 2
L 6
R 2
D 3
R 7
D 2
R 7
L 4
R 2
U 4
L 6
U 5
L 4
U 7
L 4
R 2
U 3
L 1
U 4
R 5
L 1
D 2
L 2
U 7
L 3
R 3
U 7
R 2
U 1
L 2
U 3
R 7
D 3
U 2
L 3
U 7
L 2
U 5
R 1
U 4
R 4
D 6
L 4
R 7
U 4
L 7
D 4
L 7
R 6
D 4
L 3
R 3
D 7
L 5
U 3
D 4
U 1
L 8
D 7
L 1
D 8
L 3
R 7
D 8
L 5
D 1
L 8
R 7
D 6
R 8
U 6
R 3
D 2
U 7
R 5
D 3
R 2
L 7
U 2
D 6
R 5
U 4
D 3
R 2
D 4
U 5
R 7
U 4
R 5
L 4
U 3
L 1
D 5
L 7
U 5
D 7
U 1
D 4
U 4
D 2
U 6
L 5
D 1
R 4
L 7
R 3
U 8
L 3
R 7
U 1
R 7
L 7
R 3
D 4
U 8
R 1
D 8
L 7
R 6
U 5
L 8
R 6
D 1
L 4
U 5
L 4
R 2
U 7
D 7
R 2
U 2
D 3
R 7
D 8
L 5
U 2
R 8
D 1
U 4
D 6
L 2
U 6
L 2
R 5
U 6
L 8
D 1
R 1
L 1
D 3
R 2
L 2
D 6
R 6
L 6
U 5
D 4
L 4
U 4
R 7
L 4
U 4
R 8
U 5
D 6
U 6
R 2
U 3
R 3
U 6
L 7
R 5
D 8
U 1
R 2
D 4
U 5
D 3
L 1
U 3
R 7
D 8
L 2
D 2
R 6
U 7
L 2
R 4
D 8
R 2
L 3
U 1
R 4
D 3
R 3
L 2
U 6
D 1
U 9
D 8
L 9
R 7
U 3
L 9
D 6
U 2
D 9
R 7
D 2
L 9
D 9
L 2
D 8
R 7
L 8
U 8
R 8
D 7
L 4
R 8
U 8
R 9
L 7
D 7
L 7
D 9
L 9
D 4
L 4
U 4
D 1
L 5
U 3
R 2
U 3
D 3
R 8
U 2
R 2
D 2
R 3
U 1
D 7
R 4
L 4
U 7
D 7
R 1
D 3
R 2
U 3
D 3
L 6
D 1
R 3
D 5
R 1
U 1
L 6
D 1
L 3
R 6
D 8
U 4
L 6
U 3
D 7
U 7
L 8
U 8
L 9
U 6
R 4
U 6
L 5
R 8
L 5
U 9
D 5
U 2
L 3
U 3
D 10
R 9
L 2
U 5
R 7
U 4
R 2
L 3
U 1
L 2
R 1
D 8
R 3
U 1
L 4
D 6
R 9
D 6
L 9
U 9
L 3
R 5
L 8
U 8
L 2
R 7
L 1
U 7
R 6
U 5
R 6
L 5
D 5
U 4
L 2
D 7
L 6
U 4
R 3
L 1
R 7
U 3
D 4
U 5
L 5
D 10
R 6
U 9
R 10
D 7
R 6
D 10
U 8
D 3
R 8
L 6
D 10
U 1
L 10
U 7
D 1
U 2
L 10
U 7
R 3
D 10
L 4
R 6
D 7
R 5
U 10
L 6
D 9
R 8
D 8
R 1
L 10
D 9
U 6
R 6
U 10
R 3
U 4
R 7
L 5
U 4
L 4
U 6
R 4
U 7
L 1
R 2
U 7
L 1
R 3
D 3
L 9
U 10
R 9
L 3
U 2
R 7
U 11
R 4
U 11
D 4
R 4
L 1
R 5
U 6
L 8
U 4
D 11
U 6
L 3
R 8
U 5
D 2
U 6
D 3
L 6
U 7
D 5
U 7
R 4
L 8
D 1
L 5
U 9
D 2
L 8
U 1
L 6
R 8
D 10
R 7
U 1
R 11
L 7
R 3
U 1
L 1
U 8
D 3
U 1
D 8
U 5
D 10
U 10
R 3
L 1
D 10
U 4
D 11
L 6
R 8
U 8
L 9
D 1
R 8
U 8
D 1
R 10
L 10
U 9
R 6
D 3
U 11
L 11
R 2
L 8
R 6
U 7
R 5
U 3
D 3
R 5
U 2
L 1
U 3
D 8
U 6
R 6
D 3
U 5
R 8
U 8
D 7
L 11
R 2
L 9
R 8
D 5
L 4
R 6
D 1
U 9
D 7
L 1
D 5
L 7
U 11
D 8
U 9
L 11
D 3
R 11
L 6
U 6
D 3
R 3
L 8
R 10
L 9
R 8
U 3
D 10
U 10
R 11
U 10
D 2
U 8
L 2
D 2
R 1
U 2
D 5
L 1
R 8
U 3
R 4
D 6
R 1
U 4
R 2
L 1
U 11
D 8
L 7
R 9
L 11
R 1
U 4
R 11
D 4
L 1
U 4
D 5
R 8
U 8
R 9
U 10
L 8
R 9
D 12
L 6
U 1
R 6
D 1
U 6
D 1
R 11
U 5
R 1
L 5
U 6
R 5
L 5
R 4
D 4
L 11
R 12
L 12
U 12
L 7
D 10
U 12
D 4
R 6
U 9
R 5
U 4
R 5
L 11
U 11
R 3
D 10
R 4
D 7
R 4
D 8
R 6
D 7
L 3
U 4
L 3
D 4
U 6
R 8
U 9
D 3
R 8
L 9
R 2
L 1
D 6
R 8
L 5
R 10
U 5
D 11
U 1
L 2
U 7
L 1
D 3
U 11
D 10
R 12
D 9
U 6
L 13
U 4
L 13
D 3
R 9
L 7
U 8
R 1
L 13
U 5
R 4
U 9
R 6
U 8
L 2
D 7
R 8
L 5
R 9
D 3
R 3
L 5
U 12
D 11
L 7
D 8
L 4
U 11
R 10
D 13
U 2
D 5
U 5
L 12
D 7
U 7
R 7
U 11
R 4
L 1
U 7
R 11
D 11
R 3
U 8
L 12
D 2
R 11
L 1
D 10
U 9
R 1
U 1
D 13
L 3
U 7
L 7
U 13
D 3
U 2
L 10
R 9
L 4
R 8
L 10
R 6
L 9
R 4
D 12
U 5
D 8
U 10
D 7
R 5
D 4
L 7
D 5
R 9
U 1
L 6
D 1
U 2
D 2
R 12
U 10
R 11
L 5
U 3
D 2
U 11
D 9
L 2
R 4
D 13
L 2
U 2
R 6
D 4
U 10
L 12
U 11
R 1
D 10
U 6
R 7
D 2
U 5
D 13
U 7
L 4
D 3
L 4
U 4
D 5
L 13
D 14
U 13
L 2
R 3
U 8
R 9
L 10
R 3
L 5
U 8
D 9
R 8
L 2
U 2
L 1
D 1
R 4
U 11
D 13
R 2
D 11
R 4
U 1
R 14
L 10
U 13
D 1
R 10
D 12
R 7
U 11
R 8
L 5
R 4
D 2
U 10
R 9
L 3
D 12
R 10
U 3
L 3
U 3
D 5
R 1
D 1
U 1
D 8
U 9
R 2
D 12
U 13
D 3
U 11
D 13
L 1
D 14
R 9
D 9
L 12
U 1
D 7
U 10
R 4
L 6
U 5
D 12
U 1
L 14
R 6
L 14
D 12
U 4
R 9
L 1
R 11
U 8
L 1
R 6
U 2
R 8
D 9
U 12
R 2
U 12
R 12
U 5
D 13
L 12
R 11
L 11
R 13
L 3
R 10
L 3
R 10
L 6
D 2
L 11
R 4
L 9
U 8
L 9
D 14
R 8
D 5
R 1
D 5
L 2
D 2
U 14
R 6
U 12
R 10
L 2
U 8
D 5
U 1
D 7
L 1
D 9
R 6
L 4
R 6
U 15
L 4
R 8
U 2
R 6
D 10
L 7
D 11
U 6
D 2
R 14
L 11
U 6
D 2
L 12
U 14
R 8
D 11
U 4
D 8
L 6
D 5
U 12
D 1
U 4
L 1
R 1
U 14
D 15
L 11
R 14
L 13
R 9
D 11
R 5
L 13
U 15
L 5
R 8
D 15
R 13
U 3
L 15
D 9
U 5
D 13
L 8
R 11
D 6
L 12
R 8
L 10
R 9
D 12
L 11
U 12
L 1
U 1
L 7
R 6
L 7
D 13
L 6
R 3
L 4
U 2
D 6
L 2
D 2
R 3
D 6
U 7
D 8
R 4
U 7
D 4
U 12
D 10
L 7
U 12
D 12
U 7
D 4
L 9
D 9
R 11
L 5
U 13
R 5
U 6
D 10
L 9
U 13
D 1
R 10
L 12
R 12
L 16
D 10
U 3
R 1
L 7
D 3
R 16
U 9
L 6
R 12
U 10
L 14
R 12
U 15
L 14
D 10
U 15
L 7
U 8
D 9
R 8
L 13
U 6
R 2
U 3
R 9
D 9
L 2
D 10
U 10
D 15
U 4
R 10
D 3
L 10
R 3
D 11
R 11
U 1
D 4
R 15
U 1
R 4
D 3
L 6
U 10
L 9
R 12
U 8
R 13
L 15
R 11
D 12
U 11
D 3
U 8
R 3
U 6
L 7
U 1
R 8
U 16
L 8
R 8
U 1
R 15
U 5
R 15
U 8
D 13
R 5
U 11
R 11
L 4
R 2
D 9
R 3
L 3
R 10
D 9
L 7
U 11
D 9
U 2
R 15
U 13
D 3
L 11
D 9
R 2
U 8
R 1
L 5
U 13
D 12
L 14
D 14
U 16
D 6
L 13
U 12
L 9
U 15
R 11
U 5
R 6
D 6
L 15
D 1
R 13
D 2
R 7
U 6
R 6
L 4
R 7
U 15
L 4
R 5
L 4
U 16
R 13
L 8
D 1
R 14
D 12
R 3
D 1
R 5
U 6
R 4
D 17
U 8
L 12
R 12
U 6
R 14
L 10
U 15
L 3
U 2
D 5
R 4
U 4
D 10
U 7
L 7
U 4
R 1
D 7
U 1
D 2
L 15
D 6
L 13
D 10
U 1
R 2
L 15
R 8
D 4
U 14
L 13
D 7
R 16
D 8
U 9
D 6
R 14
D 16
U 13
L 14
D 5
U 2
D 14
U 12
L 13
R 3
L 13
R 12
D 8
R 4
L 5
D 14
L 8
U 10
R 15
U 5
D 2
L 2
U 1
D 16
L 14
U 10
R 13
D 6
L 13
U 4
R 12
L 14
U 14
D 7
R 12
L 2
R 11
D 11
R 6
D 1
R 14
L 15
R 12
U 7
D 4
L 4
D 7
R 12
L 5
R 1
L 11
U 7
L 1
D 12
L 11
U 9
L 6
D 4
R 15
L 18
R 14
U 13
R 14
U 10
R 11
D 5
U 4
L 2
D 8
L 7
U 14
L 14
R 4
D 15
U 2
L 12
R 10
D 15
L 7
R 1
U 17
R 16
U 4
L 12
D 2
R 10
U 17
D 13
L 5
D 16
R 14
L 9
D 3
U 5
D 8
U 17
L 6
D 6
L 4
D 12
R 10
U 10
D 10
L 1
R 7
U 9
D 7
R 14
L 4
U 6
L 17
U 15
D 13
L 17
R 2
L 6
D 10
U 14
R 9
L 11
U 12
D 7
R 15
D 9
U 13
D 13
U 9
D 17
U 8
D 11
L 12
R 17
U 17
D 6
L 17
D 5
L 5
D 11
R 9
U 9
D 15
L 6
R 4
L 6
U 10
L 2
U 15
L 15
R 6
L 15
U 13
R 9
D 12
R 4
U 11
R 3
L 10
R 18
L 5
R 14
L 3
D 1
U 12
R 10
L 16
R 11
U 6
D 7
U 6
R 5
D 19
L 12
R 16
D 4
L 15
D 14
L 17
U 18
D 13
R 3
D 9
L 14
U 16
L 6
U 14
L 10
D 2
U 8
L 1
U 7
D 12
U 16
L 15
U 16
R 15
D 5
R 7
U 5
R 13
L 16
D 7
L 14
R 9
U 10
L 16
D 4
U 17
L 8
D 3
U 9
D 2
R 8
D 3
L 17
D 1
U 19
R 16
D 8
U 18
D 14
U 1
D 4
U 12
D 17
R 19
U 8
D 7
U 19
R 15
U 10
R 6
D 9
L 6
R 13
D 16
L 17
R 18
U 10
R 19
U 12
D 19
R 2
L 8
D 1
L 17
D 11
R 7
U 17
L 4
R 16
U 17
D 5
L 8
U 17
L 16
U 8
L 19
R 15
U 5
D 2
R 18
L 14
D 9
L 1
D 5
U 5
D 8
U 3
R 9
L 5
R 6
U 10
R 3
L 9
    "###.trim()
}
